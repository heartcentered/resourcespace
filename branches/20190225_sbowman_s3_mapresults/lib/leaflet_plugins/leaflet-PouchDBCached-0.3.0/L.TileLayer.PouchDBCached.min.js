L.TileLayer.addInitHook(function(){if(!this.options.useCache){this._db=null;this._canvas=null;return}this._db=new PouchDB('offline-tiles');this._canvas=document.createElement('canvas');if(!(this._canvas.getContext&&this._canvas.getContext('2d'))){this._canvas=null}});L.TileLayer.prototype.options.useCache=false;L.TileLayer.prototype.options.saveToCache=true;L.TileLayer.prototype.options.useOnlyCache=false;L.TileLayer.prototype.options.cacheFormat='image/png';L.TileLayer.prototype.options.cacheMaxAge=24*3600*1000;L.TileLayer.include({createTile:function(coords,done){var tile=document.createElement('img');tile.onerror=L.bind(this._tileOnError,this,done,tile);if(this.options.crossOrigin){tile.crossOrigin=''}tile.alt='';var tileUrl=this.getTileUrl(coords);if(this.options.useCache&&this._canvas){this._db.get(tileUrl,{revs_info:true},this._onCacheLookup(tile,tileUrl,done))}else{tile.onload=L.bind(this._tileOnLoad,this,done,tile)}tile.src=tileUrl;return tile},_onCacheLookup:function(tile,tileUrl,done){return function(err,data){if(data){this.fire('tilecachehit',{tile:tile,url:tileUrl});if(Date.now()>data.timestamp+this.options.cacheMaxAge&&!this.options.useOnlyCache){if(this.options.saveToCache){tile.onload=L.bind(this._saveTile,this,tile,tileUrl,data._revs_info[0].rev,done)}tile.crossOrigin='Anonymous';tile.src=tileUrl;tile.onerror=function(ev){this.src=data.dataUrl}}else{tile.onload=L.bind(this._tileOnLoad,this,done,tile);tile.src=data.dataUrl;}}else{this.fire('tilecachemiss',{tile:tile,url:tileUrl});if(this.options.useOnlyCache){tile.onload=L.Util.falseFn;tile.src=L.Util.emptyImageUrl}else{if(this.options.saveToCache){tile.onload=L.bind(this._saveTile,this,tile,tileUrl,null,done)}else{tile.onload=L.bind(this._tileOnLoad,this,done,tile)}tile.crossOrigin='Anonymous';tile.src=tileUrl}}}.bind(this)},_saveTile:function(tile,tileUrl,existingRevision,done){if(this._canvas===null){return}this._canvas.width=tile.naturalWidth||tile.width;this._canvas.height=tile.naturalHeight||tile.height;var context=this._canvas.getContext('2d');context.drawImage(tile,0,0);var dataUrl;try{dataUrl=this._canvas.toDataURL(this.options.cacheFormat)}catch(err){this.fire('tilecacheerror',{tile:tile,error:err});return done()}var doc={dataUrl:dataUrl,timestamp:Date.now()};if(existingRevision){this._db.remove(tileUrl,existingRevision)}this._db.put(doc,tileUrl,doc.timestamp);if(done){done()}},seed:function(bbox,minZoom,maxZoom){if(!this.options.useCache){return}if(minZoom>maxZoom){return}if(!this._map){return}var queue=[];for(var z=minZoom;z<=maxZoom;z+=1){var northEastPoint=this._map.project(bbox.getNorthEast(),z);var southWestPoint=this._map.project(bbox.getSouthWest(),z);var tileSize=this.getTileSize();var tileBounds=L.bounds(L.point(Math.floor(northEastPoint.x/tileSize.x),Math.floor(northEastPoint.y/tileSize.y)),L.point(Math.floor(southWestPoint.x/tileSize.x),Math.floor(southWestPoint.y/tileSize.y)));for(var j=tileBounds.min.y;j<=tileBounds.max.y;j+=1){for(var i=tileBounds.min.x;i<=tileBounds.max.x;i+=1){point=new L.Point(i,j);point.z=z;queue.push(this._getTileUrl(point))}}}var seedData={bbox:bbox,minZoom:minZoom,maxZoom:maxZoom,queueLength:queue.length};this.fire('seedstart',seedData);var tile=this._createTile();tile._layer=this;this._seedOneTile(tile,queue,seedData);return this},_createTile:function(){return document.createElement('img')},_getTileUrl:function(coords){var zoom=coords.z;if(this.options.zoomReverse){zoom=this.options.maxZoom-zoom}zoom+=this.options.zoomOffset;return L.Util.template(this._url,L.extend({r:this.options.detectRetina&&L.Browser.retina&&this.options.maxZoom>0?'@2x':'',s:this._getSubdomain(coords),x:coords.x,y:this.options.tms?this._globalTileRange.max.y-coords.y:coords.y,z:this.options.maxNativeZoom?Math.min(zoom,this.options.maxNativeZoom):zoom},this.options))},_seedOneTile:function(tile,remaining,seedData){if(!remaining.length){this.fire('seedend',seedData);return}this.fire('seedprogress',{bbox:seedData.bbox,minZoom:seedData.minZoom,maxZoom:seedData.maxZoom,queueLength:seedData.queueLength,remainingLength:remaining.length});var url=remaining.pop();this._db.get(url,function(err,data){if(!data){tile.onload=function(ev){this._saveTile(tile,url,null);this._seedOneTile(tile,remaining,seedData)}.bind(this);tile.crossOrigin='Anonymous';tile.src=url}else{this._seedOneTile(tile,remaining,seedData)}}.bind(this))}});
